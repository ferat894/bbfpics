<?xml version="1.0"?>
<doc>
<assembly>
<name>
SQLHelper
</name>
</assembly>
<members>
<member name="P:My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Int32)">
	<summary>
 New Method which includes commandTimeout
 </summary>
	<param name="connection"></param>
	<param name="commandType"></param>
	<param name="commandText"></param>
	<param name="commandTimeout"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Int32,System.Data.SqlClient.SqlParameter[])">
	<summary>
  New Method which includes commandTimeout.
 Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
 using the provided parameters.
 e.g.:  
 Dim ds As Dataset = ExecuteDataset(conn, CommandType.StoredProcedure, "GetOrders", 60, new SqlParameter("@prodid", 24))''' 
 </summary>
	<param name="connection">a valid SqlConnection</param>
	<param name="commandType">the CommandType (stored procedure, text, etc.)</param>
	<param name="commandText">the stored procedure name or T-SQL command</param>
	<param name="commandTimeout">commandTimeout</param>
	<param name="commandParameters">an array of SqlParamters used to execute the command</param>
	<returns>A dataset containing the resultset generated by the command</returns>
	<remarks></remarks>
</member>
</members>
</doc>